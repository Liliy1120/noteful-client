{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","NoteListNav/NoteListNav.js","notes-helpers.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","id","NavLink","to","concat","arguments","length","undefined","folder_id","filter","note","countNotesForFolder","folder_name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","role","onClick","history","goBack","name","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","noteId","_this","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","catch","error","console","_this$props","modified","format","onDeleteNote","NoteListMain","match","params","notesForFolder","getNotesForFolder","Note_Note_Note","note_name","NotePageMain","handleDeleteNote","push","find","findNote","content","split","para","i","NotefulForm","assign","action","AddFolder","handleSubmit","target","value","body","JSON","stringify","NotefulForm_NotefulForm","onSubmit","htmlFor","AddNote","newNote","Date","folderId","App","state","handleAddFolder","setState","toConsumableArray","handleAddNote","_this2","all","Access-Control-Allow-Origin","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.151cd052.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})","\nimport React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.folder_name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}","export const findFolder = (folders=[], folder_id) =>\nfolders.find(folder => folder.id === folder_id)\n\nexport const findNote = (notes=[], noteId) =>\nnotes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folder_id) => (\n(!folder_id)\n  ? notes\n  : notes.filter(note => note.folder_id === folder_id)\n)\n\nexport const countNotesForFolder = (notes=[], folder_id) =>\nnotes.filter(note => note.folder_id === folder_id).length\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NotePageNav.css'\n\nexport default function NotePageNav(props) {\n  return (\n    <div className='NotePageNav'>\n      <CircleButton\n        tag='button'\n        role='link'\n        onClick={() => props.history.goBack()}\n        className='NotePageNav__back-button'\n      >\n        <FontAwesomeIcon icon='chevron-left' />\n        <br />\n        Back\n      </CircleButton>\n      {props.folder && (\n        <h3 className='NotePageNav__folder-name'>\n          {props.folder.name}\n        </h3>\n      )}\n    </div>\n  )\n}\n\nNotePageNav.defaultProps = {\n  history: {\n    goBack: () => {}\n  }\n}\n","export default {\n    API_ENDPOINT: 'https://immense-peak-65063.herokuapp.com'\n  }\n  ","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folder_id } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folder_id)\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.note_name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}","\nimport React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.note_name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}","import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n","\nimport React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddFolder.css'\n\nexport default class AddFolder extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      folder_name: e.target['folder-name'].value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='folder-name-input'>\n              Name\n            </label>\n            <input type='text' id='folder-name-input' name='folder-name' />\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}","\nimport React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddNote.css'\n\nexport default class AddNote extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const newNote = {\n      note_name: e.target['note-name'].value,\n      content: e.target['note-content'].value,\n      folder_id: e.target['note-folder-id'].value,\n      modified: new Date(),\n    }\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(note => {\n        this.context.addNote(note)\n        this.props.history.push(`/folder/${note.folderId}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { folders=[] } = this.context\n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name\n            </label>\n            <input type='text' id='note-name-input' name='note-name' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content\n            </label>\n            <textarea id='note-content-input' name='note-content' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-folder-select'>\n              Folder\n            </label>\n            <select id='note-folder-select' name='note-folder-id'>\n              <option value={null}>...</option>\n              {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.folder_name}\n                </option>\n              )}\n            </select>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}","\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      }),\n      fetch(`${config.API_ENDPOINT}/folders`, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      })\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          notesRes.json(),\n          foldersRes.json(),\n        ])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleAddFolder = folder => {\n    this.setState({\n      folders: [\n        ...this.state.folders,\n        folder\n      ]\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        note\n      ]\n    })\n  }\n\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId)\n    })\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListNav}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-folder'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-note'\n          component={NotePageNav}\n        />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListMain}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageMain}\n        />\n        <Route\n          path='/add-folder'\n          component={AddFolder}\n        />\n        <Route\n          path='/add-note'\n          component={AddNote}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      addFolder: this.handleAddFolder,\n      addNote: this.handleAddNote,\n      deleteNote: this.handleDeleteNote,\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className='App'>\n          <nav className='App__nav'>\n            {this.renderNavRoutes()}\n          </nav>\n          <header className='App__header'>\n            <h1>\n              <Link to='/'>Noteful</Link>\n              {' '}\n              <FontAwesomeIcon icon='check-double' />\n            </h1>\n          </header>\n          <main className='App__main'>\n            {this.renderMainRoutes()}\n          </main>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}